{
	parserClass="icu.windea.bbcode.psi.BBCodeParser"
	extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
	psiClassPrefix="BBCode"
	psiImplClassSuffix="Impl"
	psiPackage="icu.windea.bbcode.psi"
	psiImplPackage="icu.windea.bbcode.psi.impl"
	elementTypeHolderClass="icu.windea.bbcode.psi.BBCodeTypes"
	tokenTypeClass="icu.windea.bbcode.psi.BBCodeTokenType"
	elementTypeClass="icu.windea.bbcode.psi.BBCodeElementType"
	psiImplUtilClass="icu.windea.bbcode.psi.impl.BBCodePsiImplUtil"

	tokens=[
        TAG_NAME='regexp:[\w*\-_]+'
        ATTRIBUTE_NAME='regexp:[\w*\-_]+'
        ATTRIBUTE_VALUE_TOKEN='regexp:([^=\[\]\s"][^=\[\]\s]*)|("([^"\\]|\\.)*"?)'
        TEXT_TOKEN='regexp:[^\[\]\s]+'
	]
}

root ::= (tag | text)*

tag ::=  TAG_PREFIX_START TAG_NAME attributes? (TAG_SUFFIX_END | (TAG_PREFIX_END tag_body? tag_suffix )) {
  pin=1
  recoverWhile="#auto"
  mixin="icu.windea.bbcode.psi.impl.BBCodeNamedElementImpl"
  implements="icu.windea.bbcode.psi.BBCodeNamedElement"
  methods=[getIcon getName setName getNameIdentifier getTextOffset getTagName getAttributes getValue]
}
private tag_suffix ::= TAG_SUFFIX_START TAG_NAME TAG_SUFFIX_END {
  pin=1
}

private attributes ::= simple_attribute | attribute_group
private simple_attribute ::= EQUAL_SIGN attribute_value {
  pin=1
}
private attribute_group ::= attribute +
private tag_body ::= (tag | text) +

attribute ::= ATTRIBUTE_NAME EQUAL_SIGN attribute_value {
  pin=1
  mixin="icu.windea.bbcode.psi.impl.BBCodeNamedElementImpl"
  implements="icu.windea.bbcode.psi.BBCodeNamedElement"
  implements="com.intellij.psi.PsiLiteralValue"
  methods=[getName setName getNameIdentifier getTextOffset getValue]
}
attribute_value ::= ATTRIBUTE_VALUE_TOKEN {
  implements="com.intellij.psi.PsiLiteralValue"
  methods=[getValue]
}

text ::= TEXT_TOKEN {
  implements="com.intellij.psi.PsiLiteralValue"
  methods=[getValue]
}
